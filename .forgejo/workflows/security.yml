name: Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install mise
      uses: jdx/mise-action@v2

    - name: Install dependencies
      run: |
        mise install
        echo "$HOME/.local/share/mise/shims" >> $GITHUB_PATH

    - name: Run shellcheck with security focus
      run: |
        # Run shellcheck with additional security-focused checks
        shellcheck -S error generate.sh src/common.sh
        find . -name "*.sh" -not -path "./tests/*/generated.sh" | xargs shellcheck -S error

  container-security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build container for scanning
      run: docker build -f Containerfile -t declix-bash:scan .

    - name: Run container structure test
      run: |
        # Install container-structure-test
        curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
        chmod +x container-structure-test-linux-amd64
        sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test
        
        # Create basic structure test
        cat > container-test.yaml << 'EOF'
        schemaVersion: 2.0.0
        commandTests:
          - name: "pkl version"
            command: "pkl"
            args: ["--version"]
            expectedOutput: ["pkl"]
        fileExistenceTests:
          - name: 'generate script exists'
            path: '/app/generate.sh'
            shouldExist: true
          - name: 'common functions exist'
            path: '/app/src/common.sh'
            shouldExist: true
        EOF
        
        # Run structure test
        container-structure-test test --image declix-bash:scan --config container-test.yaml

  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for secrets in code
      run: |
        # Simple grep-based secret detection
        echo "Checking for potential secrets..."
        
        # Check for common secret patterns
        if grep -r -i "password\|secret\|key\|token" --include="*.pkl" --include="*.sh" . | grep -v "# " | grep -v "example\|test\|sample"; then
          echo "WARNING: Potential secrets found in code"
          exit 1
        fi
        
        echo "No obvious secrets detected"

    - name: Validate Pkl files
      run: |
        # Install mise and pkl
        curl https://mise.run | sh
        export PATH="$HOME/.local/bin:$PATH"
        mise install pkl@latest
        
        # Validate all Pkl files syntax
        find . -name "*.pkl" | while read -r file; do
          echo "Validating $file..."
          if ! ~/.local/share/mise/installs/pkl/latest/bin/pkl eval "$file" > /dev/null 2>&1; then
            echo "ERROR: Invalid Pkl syntax in $file"
            exit 1
          fi
        done