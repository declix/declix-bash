name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install mise
      uses: jdx/mise-action@v2

    - name: Install dependencies
      run: |
        mise install
        echo "$HOME/.local/share/mise/shims" >> $GITHUB_PATH

    - name: Run all tests
      run: |
        just shellcheck
        cd tests
        just test-local-generate

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build and tag container
      run: |
        docker build -f Containerfile -t declix-bash:${{ steps.tag.outputs.tag }} .
        docker build -f Containerfile -t declix-bash:latest .

    - name: Create release archive
      run: |
        mkdir -p dist
        tar -czf dist/declix-bash-${{ steps.tag.outputs.tag }}.tar.gz \
          --exclude='.git' \
          --exclude='dist' \
          --exclude='tests/*/generated.sh' \
          .

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/declix-bash-${{ steps.tag.outputs.tag }}.tar.gz
        body: |
          ## Changes in ${{ steps.tag.outputs.tag }}
          
          ### Features
          - Declarative Linux system configuration with Pkl
          - Generate idempotent bash scripts for system management
          - Support for APT packages and file management
          
          ### Usage
          ```bash
          # Extract the archive
          tar -xzf declix-bash-${{ steps.tag.outputs.tag }}.tar.gz
          cd declix-bash
          
          # Install dependencies
          just deps
          
          # Generate and run scripts
          ./generate.sh your-resources.pkl | bash -s check
          ./generate.sh your-resources.pkl | bash -s apply
          ```
        draft: false
        prerelease: false